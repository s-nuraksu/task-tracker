generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  role          Role      @default(USER)

  tasksCreated Task[] @relation("TasksCreated")
  tasksClaimed Task[] @relation("TasksClaimed")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  completed   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  dueDate     DateTime?
  priority    Priority  @default(medium)
  department  String?
  customer    String?

  createdById String
  createdBy   User   @relation("TasksCreated", fields: [createdById], references: [id], onDelete: Cascade)

  claimedById String?
  claimedBy   User?   @relation("TasksClaimed", fields: [claimedById], references: [id])

  isCanceled Boolean @default(false)

  files File[]

  @@index([createdById])
  @@index([claimedById])
  @@index([completed])
  @@index([priority])
  @@index([createdAt])
}

enum Priority {
  low
  medium
  high
  urgent
}

model File {
  id        Int      @id @default(autoincrement())
  name      String
  url       String
  size      Int
  type      String
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}
